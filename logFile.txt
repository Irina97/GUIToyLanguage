ID: 15

Execution Stack: 
{ v= 20;{for(v= 0;v< 3;v=(v+ 1)){fork({Print(v); v=(v+ 1)})};Print((v* 10))}}

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
 v= 20
{for(v= 0;v< 3;v=(v+ 1)){fork({Print(v); v=(v+ 1)})};Print((v* 10))}

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
{for(v= 0;v< 3;v=(v+ 1)){fork({Print(v); v=(v+ 1)})};Print((v* 10))}

Symbol Table: 
v->20

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
for(v= 0;v< 3;v=(v+ 1)){fork({Print(v); v=(v+ 1)})}
Print((v* 10))

Symbol Table: 
v->20

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
{ v= 0;while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}}
Print((v* 10))

Symbol Table: 
v->20

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
 v= 0
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->20

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
{fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
fork({Print(v); v=(v+ 1)})
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
{Print(v); v=(v+ 1)}

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->1

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
Print(v)
 v=(v+ 1)

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
{fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->1

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
 v=(v+ 1)

Symbol Table: 
v->0

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
fork({Print(v); v=(v+ 1)})
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->1

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->1

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 17

Execution Stack: 
{Print(v); v=(v+ 1)}

Symbol Table: 
v->1

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->2

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 17

Execution Stack: 
Print(v)
 v=(v+ 1)

Symbol Table: 
v->1

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
{fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->2

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 17

Execution Stack: 
 v=(v+ 1)

Symbol Table: 
v->1

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
fork({Print(v); v=(v+ 1)})
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->2

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->2

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 18

Execution Stack: 
{Print(v); v=(v+ 1)}

Symbol Table: 
v->2

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->3

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 18

Execution Stack: 
Print(v)
 v=(v+ 1)

Symbol Table: 
v->2

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
Print((v* 10))

Symbol Table: 
v->3

Output: 
0
1
2

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 18

Execution Stack: 
 v=(v+ 1)

Symbol Table: 
v->2

Output: 
0
1
2

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
{ v= 20;{for(v= 0;v< 3;v=(v+ 1)){fork({Print(v); v=(v+ 1)})};Print((v* 10))}}

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
 v= 20
{for(v= 0;v< 3;v=(v+ 1)){fork({Print(v); v=(v+ 1)})};Print((v* 10))}

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
{for(v= 0;v< 3;v=(v+ 1)){fork({Print(v); v=(v+ 1)})};Print((v* 10))}

Symbol Table: 
v->20

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
for(v= 0;v< 3;v=(v+ 1)){fork({Print(v); v=(v+ 1)})}
Print((v* 10))

Symbol Table: 
v->20

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
{ v= 0;while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}}
Print((v* 10))

Symbol Table: 
v->20

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
 v= 0
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->20

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
{fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
fork({Print(v); v=(v+ 1)})
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
{Print(v); v=(v+ 1)}

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->1

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
Print(v)
 v=(v+ 1)

Symbol Table: 
v->0

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
{fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->1

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
 v=(v+ 1)

Symbol Table: 
v->0

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
fork({Print(v); v=(v+ 1)})
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->1

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->1

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 17

Execution Stack: 
{Print(v); v=(v+ 1)}

Symbol Table: 
v->1

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->2

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 17

Execution Stack: 
Print(v)
 v=(v+ 1)

Symbol Table: 
v->1

Output: 
0

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
{fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->2

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 17

Execution Stack: 
 v=(v+ 1)

Symbol Table: 
v->1

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
fork({Print(v); v=(v+ 1)})
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->2

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
 v=(v+ 1)
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->2

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 18

Execution Stack: 
{Print(v); v=(v+ 1)}

Symbol Table: 
v->2

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
while((v< 3)){fork({Print(v); v=(v+ 1)}); v=(v+ 1)}
Print((v* 10))

Symbol Table: 
v->3

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 18

Execution Stack: 
Print(v)
 v=(v+ 1)

Symbol Table: 
v->2

Output: 
0
1

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 15

Execution Stack: 
Print((v* 10))

Symbol Table: 
v->3

Output: 
0
1
2

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 18

Execution Stack: 
 v=(v+ 1)

Symbol Table: 
v->2

Output: 
0
1
2

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
{newLock(x);newLock(x)}

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)
newLock(x)

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)

Symbol Table: 
x->1

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
{newLock(x);newLock(x)}

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)
newLock(x)

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)

Symbol Table: 
x->1

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
{newLock(x);newLock(x)}

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
{newLock(x);newLock(x)}

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)
newLock(x)

Symbol Table: 

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
ID: 16

Execution Stack: 
newLock(x)

Symbol Table: 
x->1

Output: 

File Table: 

Heap: 
::::::::::::::::::::::::::::
